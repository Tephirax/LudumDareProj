<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise variables
transitionout = false;
interstitial = false;
transitionin = false;

dayofweek = 1; // Weekday: starts on Monday
dayofmonth = 5; // Day of month: starts on the 5th
background_index[0] = choose(bg_sunset, bg_cloudy, bg_sunny);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restore player control
obj_player.visible = true;
GameState.control = true;

// Close door
obj_door.image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open door
show_debug_message('Alarm 8');

// Animate door
obj_door.image_index = 1;
audio_play_sound(snd_door, 1, 0);

// Time from door opening to door closing;
alarm[9] = 105;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flag interstitial
show_debug_message('Alarm 4');
interstitial = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flag transitionout
transitionout = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shut door
obj_door.image_index = 0;
obj_player.visible = false;
// Time from door close to begin fade-out
alarm[1] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle end of day
if ( obj_door.endday ) {
    GameState.control = false;
    obj_door.endday = false;
    
    // Animate door
    obj_door.image_index = 1;
    audio_play_sound(snd_door, 1, 0);
    
    InputController.up = false;
    // Time from door open to door close
    alarm[0] = 105;
}

// Initiate fade to black
if ( transitionout ) { 
    with ( obj_screenfade ) {
        if ( screen_alpha &lt; 1 ) {
            screen_alpha += 0.01;
        } else {
            other.transitionout = false;
            // Time from fadeout to fade back in
            other.alarm[4] = 30;
        }
    }
}

if ( interstitial ) {
    show_debug_message('Checking plant growth');
    with ( obj_plantpot ) {
        // If watered, increment growthstage
        if ( planted != -1 &amp;&amp; watered ) {
            growthdays += 1;
            show_debug_message('Days of growth: ' + string(growthdays) + '/' + string(growthdaytarget));
            witherdays = 0;
            if ( growthdays == growthdaytarget &amp;&amp; growthstage &lt; maxstage ) {
                growthstage += 1;
                growthdays = 0;
            } 
        }
        // If not watered, don't grow &amp; increment towards withered
        else if ( planted != -1 &amp;&amp; !watered &amp;&amp; !withered ) {
            witherdays += 1;
            show_debug_message('Days of withering: ' + string(witherdays) + '/' + string(witherdaytarget));
            if ( witherdays == witherdaytarget ) {
                withered = true;
            } 
        }
        
        // Deflag watered
        if ( watered ) {
            watered = false;
        }
    }
    
    // Advance Day
    dayofweek += 1;
    if ( dayofweek &gt; 7 ) {
        dayofweek = 1;
    }
    dayofmonth += 1;
    if ( dayofmonth &gt; 28 ) {
        dayofmonth = 1;
    }
    obj_player.facing = 'down';
    
    // Define new day
    background_index[0] = choose(bg_sunset, bg_cloudy, bg_sunny);
    
    // Set babeh 
    if ( random(10) &gt; 9 ) {
        obj_babeh.visible = true;
    } else {
        obj_babeh.visible = false;
    }
    
    interstitial = false;
    transitionin = true;
}

// Fade back in 
if ( transitionin ) {
    with ( obj_screenfade ) {
        if ( screen_alpha &gt; 0 ) {
            screen_alpha -= 0.01;
        } else {
            other.transitionin = false;
            // Time from end of fade in to door opening
            other.alarm[8] = 90;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Day &amp; Month
var daytext = '';
var monthtext = '';
var oldcolor = draw_get_color();

if ( dayofweek == 1 ) {
    daytext = 'Monday';
} else if ( dayofweek == 2 ) {
    daytext = 'Tuesday';
} else if ( dayofweek == 3 ) {
    daytext = 'Wednesday';
} else if ( dayofweek == 4 ) {
    daytext = 'Thursday';
} else if ( dayofweek == 5 ) {
    daytext = 'Friday';
} else if ( dayofweek == 6 ) {
    daytext = 'Saturday';
} else if ( dayofweek == 7 ) {
    daytext = 'Sunday';
}

if ( dayofmonth == 1 || dayofmonth == 21 ) {
    monthtext = string(dayofmonth) + "st";
} else if ( dayofmonth == 2 || dayofmonth == 22 ) {
    monthtext = string(dayofmonth) + "nd";
} else if ( dayofmonth == 3 || dayofmonth == 23 ) {
    monthtext = string(dayofmonth) + "rd";
} else {
    monthtext = string(dayofmonth) + "th";
}

draw_set_color(c_black);
draw_set_font(font1);

draw_text(view_wview - 20 - string_width(daytext), view_hview - string_height(daytext) - 55, daytext);
draw_text(view_wview - 20 - string_width(monthtext), view_hview - string_height(monthtext) - 20, monthtext);

draw_set_color(oldcolor);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
